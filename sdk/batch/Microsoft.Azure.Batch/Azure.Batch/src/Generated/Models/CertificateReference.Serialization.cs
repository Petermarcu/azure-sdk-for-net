// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;
using System.Text.Json;
using Azure.Core;

namespace Azure.Batch.Models
{
    public partial class CertificateReference : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("thumbprint");
            writer.WriteStringValue(Thumbprint);
            writer.WritePropertyName("thumbprintAlgorithm");
            writer.WriteStringValue(ThumbprintAlgorithm);
            if (StoreLocation != null)
            {
                writer.WritePropertyName("storeLocation");
                writer.WriteStringValue(StoreLocation.Value.ToSerialString());
            }
            if (StoreName != null)
            {
                writer.WritePropertyName("storeName");
                writer.WriteStringValue(StoreName);
            }
            if (Visibility != null)
            {
                writer.WritePropertyName("visibility");
                writer.WriteStartArray();
                foreach (var item in Visibility)
                {
                    writer.WriteStringValue(item.ToSerialString());
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }

        internal static CertificateReference DeserializeCertificateReference(JsonElement element)
        {
            string thumbprint = default;
            string thumbprintAlgorithm = default;
            CertificateStoreLocation? storeLocation = default;
            string storeName = default;
            IList<CertificateVisibility> visibility = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("thumbprint"))
                {
                    thumbprint = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("thumbprintAlgorithm"))
                {
                    thumbprintAlgorithm = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("storeLocation"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storeLocation = property.Value.GetString().ToCertificateStoreLocation();
                    continue;
                }
                if (property.NameEquals("storeName"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    storeName = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("visibility"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    List<CertificateVisibility> array = new List<CertificateVisibility>();
                    foreach (var item in property.Value.EnumerateArray())
                    {
                        array.Add(item.GetString().ToCertificateVisibility());
                    }
                    visibility = array;
                    continue;
                }
            }
            return new CertificateReference(thumbprint, thumbprintAlgorithm, storeLocation, storeName, visibility);
        }
    }
}
