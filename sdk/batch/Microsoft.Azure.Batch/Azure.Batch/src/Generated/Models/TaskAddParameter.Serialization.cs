// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Batch.Models
{
    public partial class TaskAddParameter : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id");
            writer.WriteStringValue(Id);
            if (DisplayName != null)
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            writer.WritePropertyName("commandLine");
            writer.WriteStringValue(CommandLine);
            if (ContainerSettings != null)
            {
                writer.WritePropertyName("containerSettings");
                writer.WriteObjectValue(ContainerSettings);
            }
            if (ExitConditions != null)
            {
                writer.WritePropertyName("exitConditions");
                writer.WriteObjectValue(ExitConditions);
            }
            if (ResourceFiles != null)
            {
                writer.WritePropertyName("resourceFiles");
                writer.WriteStartArray();
                foreach (var item in ResourceFiles)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (OutputFiles != null)
            {
                writer.WritePropertyName("outputFiles");
                writer.WriteStartArray();
                foreach (var item in OutputFiles)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (EnvironmentSettings != null)
            {
                writer.WritePropertyName("environmentSettings");
                writer.WriteStartArray();
                foreach (var item in EnvironmentSettings)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (AffinityInfo != null)
            {
                writer.WritePropertyName("affinityInfo");
                writer.WriteObjectValue(AffinityInfo);
            }
            if (Constraints != null)
            {
                writer.WritePropertyName("constraints");
                writer.WriteObjectValue(Constraints);
            }
            if (UserIdentity != null)
            {
                writer.WritePropertyName("userIdentity");
                writer.WriteObjectValue(UserIdentity);
            }
            if (MultiInstanceSettings != null)
            {
                writer.WritePropertyName("multiInstanceSettings");
                writer.WriteObjectValue(MultiInstanceSettings);
            }
            if (DependsOn != null)
            {
                writer.WritePropertyName("dependsOn");
                writer.WriteObjectValue(DependsOn);
            }
            if (ApplicationPackageReferences != null)
            {
                writer.WritePropertyName("applicationPackageReferences");
                writer.WriteStartArray();
                foreach (var item in ApplicationPackageReferences)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (AuthenticationTokenSettings != null)
            {
                writer.WritePropertyName("authenticationTokenSettings");
                writer.WriteObjectValue(AuthenticationTokenSettings);
            }
            writer.WriteEndObject();
        }
    }
}
