// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Collections.Generic;

namespace Azure.Batch.Models
{
    /// <summary> The configuration for container-enabled Pools. </summary>
    public partial class ContainerConfiguration
    {
        /// <summary> Initializes a new instance of ContainerConfiguration. </summary>
        public ContainerConfiguration()
        {
            Type = "dockerCompatible";
        }

        /// <summary> Initializes a new instance of ContainerConfiguration. </summary>
        /// <param name="type"> The container technology to be used. </param>
        /// <param name="containerImageNames"> This is the full Image reference, as would be specified to &quot;docker pull&quot;. An Image will be sourced from the default Docker registry unless the Image is fully qualified with an alternative registry. </param>
        /// <param name="containerRegistries"> If any Images must be downloaded from a private registry which requires credentials, then those credentials must be provided here. </param>
        internal ContainerConfiguration(string type, IList<string> containerImageNames, IList<ContainerRegistry> containerRegistries)
        {
            Type = type;
            ContainerImageNames = containerImageNames;
            ContainerRegistries = containerRegistries;
        }

        /// <summary> The container technology to be used. </summary>
        public string Type { get; }
        /// <summary> This is the full Image reference, as would be specified to &quot;docker pull&quot;. An Image will be sourced from the default Docker registry unless the Image is fully qualified with an alternative registry. </summary>
        public IList<string> ContainerImageNames { get; set; }
        /// <summary> If any Images must be downloaded from a private registry which requires credentials, then those credentials must be provided here. </summary>
        public IList<ContainerRegistry> ContainerRegistries { get; set; }
    }
}
