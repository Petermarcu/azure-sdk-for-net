// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Batch.Models
{
    public partial class PoolAddParameter : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id");
            writer.WriteStringValue(Id);
            if (DisplayName != null)
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            writer.WritePropertyName("vmSize");
            writer.WriteStringValue(VmSize);
            if (CloudServiceConfiguration != null)
            {
                writer.WritePropertyName("cloudServiceConfiguration");
                writer.WriteObjectValue(CloudServiceConfiguration);
            }
            if (VirtualMachineConfiguration != null)
            {
                writer.WritePropertyName("virtualMachineConfiguration");
                writer.WriteObjectValue(VirtualMachineConfiguration);
            }
            if (ResizeTimeout != null)
            {
                writer.WritePropertyName("resizeTimeout");
                writer.WriteStringValue(ResizeTimeout.Value, "P");
            }
            if (TargetDedicatedNodes != null)
            {
                writer.WritePropertyName("targetDedicatedNodes");
                writer.WriteNumberValue(TargetDedicatedNodes.Value);
            }
            if (TargetLowPriorityNodes != null)
            {
                writer.WritePropertyName("targetLowPriorityNodes");
                writer.WriteNumberValue(TargetLowPriorityNodes.Value);
            }
            if (EnableAutoScale != null)
            {
                writer.WritePropertyName("enableAutoScale");
                writer.WriteBooleanValue(EnableAutoScale.Value);
            }
            if (AutoScaleFormula != null)
            {
                writer.WritePropertyName("autoScaleFormula");
                writer.WriteStringValue(AutoScaleFormula);
            }
            if (AutoScaleEvaluationInterval != null)
            {
                writer.WritePropertyName("autoScaleEvaluationInterval");
                writer.WriteStringValue(AutoScaleEvaluationInterval.Value, "P");
            }
            if (EnableInterNodeCommunication != null)
            {
                writer.WritePropertyName("enableInterNodeCommunication");
                writer.WriteBooleanValue(EnableInterNodeCommunication.Value);
            }
            if (NetworkConfiguration != null)
            {
                writer.WritePropertyName("networkConfiguration");
                writer.WriteObjectValue(NetworkConfiguration);
            }
            if (StartTask != null)
            {
                writer.WritePropertyName("startTask");
                writer.WriteObjectValue(StartTask);
            }
            if (CertificateReferences != null)
            {
                writer.WritePropertyName("certificateReferences");
                writer.WriteStartArray();
                foreach (var item in CertificateReferences)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (ApplicationPackageReferences != null)
            {
                writer.WritePropertyName("applicationPackageReferences");
                writer.WriteStartArray();
                foreach (var item in ApplicationPackageReferences)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (ApplicationLicenses != null)
            {
                writer.WritePropertyName("applicationLicenses");
                writer.WriteStartArray();
                foreach (var item in ApplicationLicenses)
                {
                    writer.WriteStringValue(item);
                }
                writer.WriteEndArray();
            }
            if (MaxTasksPerNode != null)
            {
                writer.WritePropertyName("maxTasksPerNode");
                writer.WriteNumberValue(MaxTasksPerNode.Value);
            }
            if (TaskSchedulingPolicy != null)
            {
                writer.WritePropertyName("taskSchedulingPolicy");
                writer.WriteObjectValue(TaskSchedulingPolicy);
            }
            if (UserAccounts != null)
            {
                writer.WritePropertyName("userAccounts");
                writer.WriteStartArray();
                foreach (var item in UserAccounts)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (Metadata != null)
            {
                writer.WritePropertyName("metadata");
                writer.WriteStartArray();
                foreach (var item in Metadata)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (MountConfiguration != null)
            {
                writer.WritePropertyName("mountConfiguration");
                writer.WriteStartArray();
                foreach (var item in MountConfiguration)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WriteEndObject();
        }
    }
}
