// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Text.Json;
using Azure.Core;

namespace Azure.Batch.Models
{
    public partial class JobExecutionInformation
    {
        internal static JobExecutionInformation DeserializeJobExecutionInformation(JsonElement element)
        {
            DateTimeOffset startTime = default;
            DateTimeOffset? endTime = default;
            string poolId = default;
            JobSchedulingError schedulingError = default;
            string terminateReason = default;
            foreach (var property in element.EnumerateObject())
            {
                if (property.NameEquals("startTime"))
                {
                    startTime = property.Value.GetDateTimeOffset("S");
                    continue;
                }
                if (property.NameEquals("endTime"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    endTime = property.Value.GetDateTimeOffset("S");
                    continue;
                }
                if (property.NameEquals("poolId"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    poolId = property.Value.GetString();
                    continue;
                }
                if (property.NameEquals("schedulingError"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    schedulingError = JobSchedulingError.DeserializeJobSchedulingError(property.Value);
                    continue;
                }
                if (property.NameEquals("terminateReason"))
                {
                    if (property.Value.ValueKind == JsonValueKind.Null)
                    {
                        continue;
                    }
                    terminateReason = property.Value.GetString();
                    continue;
                }
            }
            return new JobExecutionInformation(startTime, endTime, poolId, schedulingError, terminateReason);
        }
    }
}
