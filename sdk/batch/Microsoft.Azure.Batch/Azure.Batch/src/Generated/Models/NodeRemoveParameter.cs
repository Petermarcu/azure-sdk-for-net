// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System;
using System.Collections.Generic;
using System.Linq;

namespace Azure.Batch.Models
{
    /// <summary> Options for removing Compute Nodes from a Pool. </summary>
    public partial class NodeRemoveParameter
    {
        /// <summary> Initializes a new instance of NodeRemoveParameter. </summary>
        /// <param name="nodeList"> A list containing the IDs of the Compute Nodes to be removed from the specified Pool. </param>
        public NodeRemoveParameter(IEnumerable<string> nodeList)
        {
            if (nodeList == null)
            {
                throw new ArgumentNullException(nameof(nodeList));
            }

            NodeList = nodeList.ToArray();
        }

        /// <summary> Initializes a new instance of NodeRemoveParameter. </summary>
        /// <param name="nodeList"> A list containing the IDs of the Compute Nodes to be removed from the specified Pool. </param>
        /// <param name="resizeTimeout"> The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). </param>
        /// <param name="nodeDeallocationOption"> The default value is requeue. </param>
        internal NodeRemoveParameter(IList<string> nodeList, TimeSpan? resizeTimeout, ComputeNodeDeallocationOption? nodeDeallocationOption)
        {
            NodeList = nodeList;
            ResizeTimeout = resizeTimeout;
            NodeDeallocationOption = nodeDeallocationOption;
        }

        /// <summary> A list containing the IDs of the Compute Nodes to be removed from the specified Pool. </summary>
        public IList<string> NodeList { get; }
        /// <summary> The default value is 15 minutes. The minimum value is 5 minutes. If you specify a value less than 5 minutes, the Batch service returns an error; if you are calling the REST API directly, the HTTP status code is 400 (Bad Request). </summary>
        public TimeSpan? ResizeTimeout { get; set; }
        /// <summary> The default value is requeue. </summary>
        public ComputeNodeDeallocationOption? NodeDeallocationOption { get; set; }
    }
}
