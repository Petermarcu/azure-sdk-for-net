// Copyright (c) Microsoft Corporation. All rights reserved.
// Licensed under the MIT License.

// <auto-generated/>

#nullable disable

using System.Text.Json;
using Azure.Core;

namespace Azure.Batch.Models
{
    public partial class JobAddParameter : IUtf8JsonSerializable
    {
        void IUtf8JsonSerializable.Write(Utf8JsonWriter writer)
        {
            writer.WriteStartObject();
            writer.WritePropertyName("id");
            writer.WriteStringValue(Id);
            if (DisplayName != null)
            {
                writer.WritePropertyName("displayName");
                writer.WriteStringValue(DisplayName);
            }
            if (Priority != null)
            {
                writer.WritePropertyName("priority");
                writer.WriteNumberValue(Priority.Value);
            }
            if (Constraints != null)
            {
                writer.WritePropertyName("constraints");
                writer.WriteObjectValue(Constraints);
            }
            if (JobManagerTask != null)
            {
                writer.WritePropertyName("jobManagerTask");
                writer.WriteObjectValue(JobManagerTask);
            }
            if (JobPreparationTask != null)
            {
                writer.WritePropertyName("jobPreparationTask");
                writer.WriteObjectValue(JobPreparationTask);
            }
            if (JobReleaseTask != null)
            {
                writer.WritePropertyName("jobReleaseTask");
                writer.WriteObjectValue(JobReleaseTask);
            }
            if (CommonEnvironmentSettings != null)
            {
                writer.WritePropertyName("commonEnvironmentSettings");
                writer.WriteStartArray();
                foreach (var item in CommonEnvironmentSettings)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            writer.WritePropertyName("poolInfo");
            writer.WriteObjectValue(PoolInfo);
            if (OnAllTasksComplete != null)
            {
                writer.WritePropertyName("onAllTasksComplete");
                writer.WriteStringValue(OnAllTasksComplete.Value.ToSerialString());
            }
            if (OnTaskFailure != null)
            {
                writer.WritePropertyName("onTaskFailure");
                writer.WriteStringValue(OnTaskFailure.Value.ToSerialString());
            }
            if (Metadata != null)
            {
                writer.WritePropertyName("metadata");
                writer.WriteStartArray();
                foreach (var item in Metadata)
                {
                    writer.WriteObjectValue(item);
                }
                writer.WriteEndArray();
            }
            if (UsesTaskDependencies != null)
            {
                writer.WritePropertyName("usesTaskDependencies");
                writer.WriteBooleanValue(UsesTaskDependencies.Value);
            }
            if (NetworkConfiguration != null)
            {
                writer.WritePropertyName("networkConfiguration");
                writer.WriteObjectValue(NetworkConfiguration);
            }
            writer.WriteEndObject();
        }
    }
}
